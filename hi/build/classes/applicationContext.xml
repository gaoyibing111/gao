<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
		default-lazy-init="true">

	<!--这里主要配置的是让spring自动查找数据库的配置文件，这里是去找mysql.properties文件 -->
	<context:property-placeholder location="classpath:application.properties" />
	
	
	<!-- Declare a datasource that has pooling capabilities -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
			<property name="driverClass" value="${jdbc.driverClassName}" />
			<property name="jdbcUrl" value="${jdbc.url}" />
			<property name="user" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 1 -->
			<property name="acquireIncrement" value="1"></property>
			<!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
			<property name="initialPoolSize" value="3"></property>
			<!--最大空闲时间,30秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
			<property name="maxIdleTime" value="30"></property>
			<!--连接池中保留的最大连接数。Default: 15 -->
			<property name="maxPoolSize" value="64"></property>
			<!--连接池中保留的最小连接数。Default: 3 -->
			<property name="minPoolSize" value="3"></property>
			<!--两次连接中间隔时间，单位毫秒。Default: 1000 -->
			<property name="acquireRetryDelay" value="1000"></property>
			<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
			<property name="acquireRetryAttempts" value="60"></property>
	</bean>
	
	<!-- Declare a transaction manager -->
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
	<!--这里是对sqlSessionFactory进行配置。SqlSessionFactory主要是用来创建实例的，他可以得到一个SqlSession，这个SqlSession中包含所有执行数据库操作的方法。也就是说你只需要调用他的方法就可以对数据库进行操作了，而不需要你自己写Java代码去对数据库进行操作.-->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/mybatis/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath:mapper/*Mapper.xml" />
		<property name="typeAliasesPackage" value="com.mvc.domain" />
	</bean>
	
	<!--配置Mapper的相关信息，并将其与sqlSessionFactory相关联，使得sqlSessionFactory可以读取到相关Mapper.xml的配置信息，并执行相关操作。 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.mvc.dao" />
	</bean>

<!-- 验证码 -->
    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">  
            <property name="config">  
                <bean class="com.google.code.kaptcha.util.Config">  
                    <constructor-arg>  
                        <props>  
                            <prop key="kaptcha.border">no</prop>  
                            <prop key="kaptcha.border.color">105,179,90</prop>  
                            <prop key="kaptcha.textproducer.font.color">red</prop>  
                            <prop key="kaptcha.image.width">250</prop>  
                            <prop key="kaptcha.textproducer.font.size">105</prop>  
                            <prop key="kaptcha.image.height">150</prop>  
                            <prop key="kaptcha.session.key">code</prop>  
                            <prop key="kaptcha.textproducer.char.length">4</prop>  
                            <prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>  
                        </props>  
                    </constructor-arg>  
                </bean>  
            </property>  
        </bean>  



</beans>